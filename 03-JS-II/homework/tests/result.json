{"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":18,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":21,"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"startTime":1604507877615,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["obtenerMayor(x, y)"],"failureMessages":[],"fullName":"obtenerMayor(x, y) should return x if it is larger than y","location":null,"status":"passed","title":"should return x if it is larger than y"},{"ancestorTitles":["obtenerMayor(x, y)"],"failureMessages":[],"fullName":"obtenerMayor(x, y) should return y if it is larger than x","location":null,"status":"passed","title":"should return y if it is larger than x"},{"ancestorTitles":["obtenerMayor(x, y)"],"failureMessages":[],"fullName":"obtenerMayor(x, y) should return either one if they are the same","location":null,"status":"passed","title":"should return either one if they are the same"},{"ancestorTitles":["saludo(idioma)"],"failureMessages":[],"fullName":"saludo(idioma) should return 'Guten Tag!' for aleman","location":null,"status":"passed","title":"should return 'Guten Tag!' for aleman"},{"ancestorTitles":["saludo(idioma)"],"failureMessages":[],"fullName":"saludo(idioma) should return 'Hola!' for ingles","location":null,"status":"passed","title":"should return 'Hola!' for ingles"},{"ancestorTitles":["saludo(idioma)"],"failureMessages":[],"fullName":"saludo(idioma) should return 'Ni Hao!' for mandarin","location":null,"status":"passed","title":"should return 'Ni Hao!' for mandarin"},{"ancestorTitles":["saludo(idioma)"],"failureMessages":[],"fullName":"saludo(idioma) should return 'Hola!' if no argument is passed in or if a idioma beyond ingles, mandarin, and aleman is passed in.","location":null,"status":"passed","title":"should return 'Hola!' if no argument is passed in or if a idioma beyond ingles, mandarin, and aleman is passed in."},{"ancestorTitles":["esDiezOCinco(num)"],"failureMessages":[],"fullName":"esDiezOCinco(num) should return true if num is 10 or 5","location":null,"status":"passed","title":"should return true if num is 10 or 5"},{"ancestorTitles":["esDiezOCinco(num)"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected value to be:\n  false\nReceived:\n  true\n    at Object.<anonymous> (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\03-JS-II\\homework\\tests\\JSII.test.js:46:30)\n    at Object.asyncFn (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmine_async.js:82:37)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:52:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:39:19)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:73:82"],"fullName":"esDiezOCinco(num) should return false if num is not 10 or 5","location":null,"status":"failed","title":"should return false if num is not 10 or 5"},{"ancestorTitles":["estaEnRango(num)"],"failureMessages":[],"fullName":"estaEnRango(num) should return true if num is inside range","location":null,"status":"passed","title":"should return true if num is inside range"},{"ancestorTitles":["estaEnRango(num)"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected value to be:\n  false\nReceived:\n  true\n    at Object.<anonymous> (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\03-JS-II\\homework\\tests\\JSII.test.js:61:29)\n    at Object.asyncFn (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmine_async.js:82:37)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:52:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:39:19)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:73:82"],"fullName":"estaEnRango(num) should return false if outside of range","location":null,"status":"failed","title":"should return false if outside of range"},{"ancestorTitles":["esEntero(num)"],"failureMessages":[],"fullName":"esEntero(num) should return true if num is 5","location":null,"status":"passed","title":"should return true if num is 5"},{"ancestorTitles":["esEntero(num)"],"failureMessages":[],"fullName":"esEntero(num) should return false if num is 0.5","location":null,"status":"passed","title":"should return false if num is 0.5"},{"ancestorTitles":["esEntero(num)"],"failureMessages":[],"fullName":"esEntero(num) should return true if num is -20","location":null,"status":"passed","title":"should return true if num is -20"},{"ancestorTitles":["esEntero(num)"],"failureMessages":[],"fullName":"esEntero(num) should return true for 0","location":null,"status":"passed","title":"should return true for 0"},{"ancestorTitles":["fizzBuzz(num)"],"failureMessages":[],"fullName":"fizzBuzz(num) should return fizz if divisible by 3","location":null,"status":"passed","title":"should return fizz if divisible by 3"},{"ancestorTitles":["fizzBuzz(num)"],"failureMessages":[],"fullName":"fizzBuzz(num) should return buzz if divisible by 5","location":null,"status":"passed","title":"should return buzz if divisible by 5"},{"ancestorTitles":["fizzBuzz(num)"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected value to be:\n  \"fizzbuzz\"\nReceived:\n  \"fizz\"\n    at Object.<anonymous> (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\03-JS-II\\homework\\tests\\JSII.test.js:91:26)\n    at Object.asyncFn (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmine_async.js:82:37)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:52:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:39:19)\n    at C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:73:82"],"fullName":"fizzBuzz(num) should return fizzbuzz if divisible by 3 and 5","location":null,"status":"failed","title":"should return fizzbuzz if divisible by 3 and 5"},{"ancestorTitles":["fizzBuzz(num)"],"failureMessages":[],"fullName":"fizzBuzz(num) should return num if not divisible by 3 or 5","location":null,"status":"passed","title":"should return num if not divisible by 3 or 5"},{"ancestorTitles":["esPrimo(num)"],"failureMessages":[],"fullName":"esPrimo(num) should return true if num is prime","location":null,"status":"passed","title":"should return true if num is prime"},{"ancestorTitles":["esPrimo(num)"],"failureMessages":[],"fullName":"esPrimo(num) should return false if num is not prime","location":null,"status":"passed","title":"should return false if num is not prime"}],"endTime":1604507879677,"message":"  ● esDiezOCinco(num) › should return false if num is not 10 or 5\n\n    expect(received).toBe(expected) // Object.is equality\n    \n    Expected value to be:\n      false\n    Received:\n      true\n\n      44 |   });\n      45 |   it('should return false if num is not 10 or 5', function() {\n    > 46 |     expect(esDiezOCinco(11)).toBe(false);\n      47 |     expect(esDiezOCinco(6)).toBe(false);\n      48 |     expect(esDiezOCinco(0)).toBe(false);\n      49 |     expect(esDiezOCinco(5.01)).toBe(false);\n      \n      at Object.<anonymous> (03-JS-II/homework/tests/JSII.test.js:46:30)\n\n  ● estaEnRango(num) › should return false if outside of range\n\n    expect(received).toBe(expected) // Object.is equality\n    \n    Expected value to be:\n      false\n    Received:\n      true\n\n      59 |   });\n      60 |   it('should return false if outside of range', function() {\n    > 61 |     expect(estaEnRango(10)).toBe(false);\n      62 |     expect(estaEnRango(20)).toBe(false);\n      63 |     expect(estaEnRango(50)).toBe(false);\n      64 |     expect(estaEnRango(100)).toBe(false);\n      \n      at Object.<anonymous> (03-JS-II/homework/tests/JSII.test.js:61:29)\n\n  ● fizzBuzz(num) › should return fizzbuzz if divisible by 3 and 5\n\n    expect(received).toBe(expected) // Object.is equality\n    \n    Expected value to be:\n      \"fizzbuzz\"\n    Received:\n      \"fizz\"\n\n      89 |   });\n      90 |   it('should return fizzbuzz if divisible by 3 and 5', function() {\n    > 91 |     expect(fizzBuzz(15)).toBe('fizzbuzz');\n      92 |   });\n      93 |   it('should return num if not divisible by 3 or 5', function() {\n      94 |     expect(fizzBuzz(4)).toBe(4);\n      \n      at Object.<anonymous> (03-JS-II/homework/tests/JSII.test.js:91:26)\n","name":"C:\\Users\\Carlos\\Desktop\\Henry\\Curso.Prep.Henry\\03-JS-II\\homework\\tests\\JSII.test.js","startTime":1604507879054,"status":"failed","summary":""}],"wasInterrupted":false}